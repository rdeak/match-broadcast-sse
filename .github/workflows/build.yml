name: 'Build'

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: rdeak/semantic-release-action@v1
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.aws_account_id }}:role/${{ secrets.aws_role_name }}
          aws-region: ${{ secrets.aws_region }}

      - name: Build and publish docker image
        uses: rdeak/publish-image-action@v1
        if: ${{ env.NEW_RELEASE_CREATED == 'true' }}
        with:
          release_tag: ${{ env.RELEASE_TAG }}
          aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          aws_region: ${{ secrets.AWS_REGION }}
          aws_ecr_name: ${{ secrets.AWS_ECR_NAME }}

      - name: Publish app
        #if: ${{ env.NEW_RELEASE_CREATED == 'true' }}
        shell: bash
        run: |
          aws ec2 authorize-security-group-ingress \
          --group-id "$(aws ec2 describe-security-groups \
          --filters Name=group-name,Values="${{ secrets.AWS_SG_NAME }}" \
          --query "SecurityGroups[*].GroupId" \
          --output text \
          --no-cli-pager)" \
          --protocol tcp \
          --port 22 \
          --cidr $(curl -s http://checkip.amazonaws.com)/32 \
          --no-cli-pager

      - name: Clean up
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
          --group-id "$(aws ec2 describe-security-groups \
          --filters Name=group-name,Values="${{ secrets.AWS_SG_NAME }}" \
          --query "SecurityGroups[*].GroupId" \
          --output text \
          --no-cli-pager)" \
          --protocol tcp \
          --port 22 \
          --cidr $(curl -s http://checkip.amazonaws.com)/32 \
          --no-cli-pager
